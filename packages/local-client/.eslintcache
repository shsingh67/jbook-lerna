[{"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\index.tsx":"1","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\cell-list.tsx":"2","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\index.ts":"3","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\hooks\\use-typed-selector.ts":"4","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\add-cell.tsx":"5","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\cell-list-item.tsx":"6","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\store.ts":"7","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\cell.ts":"8","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\hooks\\use-actions.ts":"9","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\code-cell.tsx":"10","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\text-editor.tsx":"11","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\action-bar.tsx":"12","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\action-creators\\index.ts":"13","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\reducers\\index.ts":"14","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\hooks\\use-cumulative-code.ts":"15","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\code-editor.tsx":"16","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\preview.tsx":"17","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\resizable.tsx":"18","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\action-types\\index.ts":"19","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\reducers\\cellsReducer.ts":"20","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\reducers\\bundlesReducer.ts":"21","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\bundler\\index.ts":"22","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"23","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\bundler\\plugins\\fetch-plugin.ts":"24","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\middlewares\\persist-middleware.ts":"25"},{"size":453,"mtime":1627419706518,"results":"26","hashOfConfig":"27"},{"size":981,"mtime":1627513103387,"results":"28","hashOfConfig":"27"},{"size":130,"mtime":1621816548292,"results":"29","hashOfConfig":"27"},{"size":186,"mtime":1621814995119,"results":"30","hashOfConfig":"27"},{"size":1138,"mtime":1622159777856,"results":"31","hashOfConfig":"27"},{"size":767,"mtime":1621821640807,"results":"32","hashOfConfig":"27"},{"size":292,"mtime":1627513708729,"results":"33","hashOfConfig":"27"},{"size":119,"mtime":1621900550225,"results":"34","hashOfConfig":"27"},{"size":348,"mtime":1622770003620,"results":"35","hashOfConfig":"27"},{"size":1946,"mtime":1623290689135,"results":"36","hashOfConfig":"27"},{"size":1347,"mtime":1621818782522,"results":"37","hashOfConfig":"27"},{"size":1023,"mtime":1621820708323,"results":"38","hashOfConfig":"27"},{"size":2327,"mtime":1627512250678,"results":"39","hashOfConfig":"27"},{"size":301,"mtime":1622768057717,"results":"40","hashOfConfig":"27"},{"size":1249,"mtime":1623290651011,"results":"41","hashOfConfig":"27"},{"size":2292,"mtime":1621900625256,"results":"42","hashOfConfig":"27"},{"size":1530,"mtime":1621900348710,"results":"43","hashOfConfig":"27"},{"size":1707,"mtime":1621900469722,"results":"44","hashOfConfig":"27"},{"size":395,"mtime":1627511764414,"results":"45","hashOfConfig":"27"},{"size":2576,"mtime":1627512312670,"results":"46","hashOfConfig":"27"},{"size":940,"mtime":1622769225859,"results":"47","hashOfConfig":"27"},{"size":948,"mtime":1623289471326,"results":"48","hashOfConfig":"27"},{"size":830,"mtime":1621900195994,"results":"49","hashOfConfig":"27"},{"size":1797,"mtime":1621900192116,"results":"50","hashOfConfig":"27"},{"size":880,"mtime":1627514837785,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"zemhcv",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\index.tsx",[],["106","107"],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\cell-list.tsx",["108","109","110"],"import \"./cell-list.css\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport CellListItem from \"./cell-list-item\";\r\nimport AddCell from \"./add-cell\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\n\r\nconst CellList: React.FC = () => {\r\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\r\n    order.map((id) => data[id])\r\n  );\r\n  const { fetchCells, saveCells } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchCells();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveCells();\r\n  }, [JSON.stringify(cells)]);\r\n\r\n  const renderedCells = cells.map((cell) => (\r\n    <Fragment key={cell.id}>\r\n      <CellListItem key={cell.id} cell={cell} />\r\n      <AddCell previousCellId={cell.id} />\r\n    </Fragment>\r\n  ));\r\n  return (\r\n    <div className=\"cell-list\">\r\n      <AddCell forceVisible={cells.length === 0} previousCellId={null} />\r\n      {renderedCells}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CellList;\r\n","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\index.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\hooks\\use-typed-selector.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\add-cell.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\cell-list-item.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\store.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\cell.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\hooks\\use-actions.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\code-cell.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\text-editor.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\action-bar.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\action-creators\\index.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\reducers\\index.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\hooks\\use-cumulative-code.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\code-editor.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\preview.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\components\\resizable.tsx",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\action-types\\index.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\reducers\\cellsReducer.ts",["111"],"import produce from \"immer\";\r\nimport { transpileModule } from \"typescript\";\r\nimport { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\nimport { Cell } from \"../cell\";\r\n\r\ninterface CellsState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  order: string[];\r\n  data: {\r\n    [key: string]: Cell;\r\n  };\r\n}\r\n\r\nconst initialState: CellsState = {\r\n  loading: false,\r\n  error: null,\r\n  order: [],\r\n  data: {},\r\n};\r\n\r\nconst reducer = produce((state: CellsState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.SAVE_CELLS_ERROR:\r\n      state.error = action.payload;\r\n\r\n      return state;\r\n\r\n    case ActionType.FETCH_CELLS:\r\n      state.loading = true;\r\n      state.error = null;\r\n\r\n      return state;\r\n\r\n    case ActionType.FETCH_CELLS_COMPLETE:\r\n      state.order = action.payload.map((cell) => cell.id);\r\n      state.data = action.payload.reduce((acc, cell) => {\r\n        acc[cell.id] = cell;\r\n        return acc;\r\n      }, {} as CellsState[\"data\"]);\r\n      return state;\r\n\r\n    case ActionType.FETCH_CELLS_ERROR:\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n\r\n      return state;\r\n\r\n    case ActionType.UPDATE_CELL:\r\n      const { id, content } = action.payload;\r\n\r\n      state.data[id].content = content;\r\n      return state;\r\n    case ActionType.DELETE_CELL:\r\n      delete state.data[action.payload];\r\n      state.order = state.order.filter((id) => id !== action.payload);\r\n\r\n      return state;\r\n    case ActionType.MOVE_CELL:\r\n      const { direction } = action.payload;\r\n      const index = state.order.findIndex((id) => id === action.payload.id);\r\n      const targetIndex = direction === \"up\" ? index - 1 : index + 1;\r\n\r\n      if (targetIndex < 0 || targetIndex > state.order.length - 1) {\r\n        return state;\r\n      }\r\n\r\n      state.order[index] = state.order[targetIndex];\r\n      state.order[targetIndex] = action.payload.id;\r\n\r\n      return state;\r\n    case ActionType.INSERT_CELL_AFTER:\r\n      const cell: Cell = {\r\n        content: \"\",\r\n        type: action.payload.type,\r\n        id: randomId(),\r\n      };\r\n\r\n      state.data[cell.id] = cell;\r\n\r\n      const foundIndex = state.order.findIndex(\r\n        (id) => id === action.payload.id\r\n      );\r\n\r\n      if (foundIndex < 0) {\r\n        state.order.unshift(cell.id);\r\n      } else {\r\n        state.order.splice(foundIndex + 1, 0, cell.id);\r\n      }\r\n\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n});\r\n\r\nconst randomId = () => {\r\n  return Math.random().toString(36).substr(2, 5);\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\reducers\\bundlesReducer.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\bundler\\index.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],["112","113"],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\bundler\\plugins\\fetch-plugin.ts",[],"C:\\Users\\manu\\Documents\\github-projects\\jbook\\packages\\local-client\\src\\state\\middlewares\\persist-middleware.ts",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":16,"column":6,"nodeType":"120","endLine":16,"endColumn":8,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":20,"column":6,"nodeType":"120","endLine":20,"endColumn":29,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":20,"column":7,"nodeType":"125","endLine":20,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":25},{"ruleId":"114","replacedBy":"130"},{"ruleId":"116","replacedBy":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCells'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'saveCells'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","@typescript-eslint/no-unused-vars","'transpileModule' is defined but never used.","Identifier","unusedVar",["132"],["133"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [fetchCells]",{"range":"140","text":"141"},"Update the dependencies array to be: [saveCells]",{"range":"142","text":"143"},[512,514],"[fetchCells]",[564,587],"[saveCells]"]